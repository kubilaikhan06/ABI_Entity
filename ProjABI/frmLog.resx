<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLog.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAxAC4AMAAgACgA
        dQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAZABlAGYAYQB1AGwAdAAgAHEA
        dQBhAGwAaQB0AHkACgAAAP/bAEMACAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLicg
        IiwjHBwoNyksMDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIANIA0gMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APfqWiigBKBS0UAJS0UUAFFFFACGloooAKKKKACiiigAooooAKKKKACi
        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
</value>
  </data>
</root>